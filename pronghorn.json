{
  "id": "@itentialopensource/adapter-salesforce",
  "type": "Adapter",
  "export": "Salesforce",
  "title": "Salesforce",
  "src": "adapter.js",
  "roles": [
    "admin"
  ],
  "methods": [
    {
      "name": "iapUpdateAdapterConfiguration",
      "summary": "Updates the adapter configuration",
      "description": "Updates the adapter configuration file with the provided changes",
      "input": [
        {
          "name": "configFile",
          "type": "string",
          "info": "The name of the file to change",
          "required": true,
          "schema": {
            "title": "configFile",
            "type": "string"
          }
        },
        {
          "name": "changes",
          "type": "object",
          "info": "JSON object containing the configuration changes",
          "required": true,
          "schema": {
            "title": "changes",
            "type": "object"
          }
        },
        {
          "name": "entity",
          "type": "string",
          "info": "The entity in which the changes are being made",
          "required": false,
          "schema": {
            "title": "entity",
            "type": "string"
          }
        },
        {
          "name": "type",
          "type": "string",
          "info": "The type of file to change - action, schema, or mock",
          "required": false,
          "schema": {
            "title": "type",
            "type": "string"
          }
        },
        {
          "name": "action",
          "type": "string",
          "info": "The action to be changed",
          "required": false,
          "schema": {
            "title": "action",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapUpdateAdapterConfiguration"
      },
      "task": true
    },
    {
      "name": "iapFindAdapterPath",
      "summary": "Provides the ability to see if a particular API path is supported by the adapter",
      "description": "Provides the ability to see if a particular API path is supported by the adapter",
      "input": [
        {
          "name": "apiPath",
          "type": "string",
          "info": "The API Path you want to check - make sure to not include base path and version",
          "description": "The API Path you want to check - make sure to not include base path and version",
          "schema": {
            "title": "apiPath",
            "type": "string"
          },
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapFindAdapterPath"
      },
      "task": true
    },
    {
      "name": "iapSuspendAdapter",
      "summary": "Suspends the adapter",
      "description": "Suspends the adapter",
      "input": [
        {
          "name": "mode",
          "type": "enum",
          "enumerals": [
            "pause",
            "error"
          ],
          "info": "How incoming requests are handled. Defaults to 'pause'",
          "description": "How incoming requests are handled. Defaults to 'pause'",
          "schema": {
            "title": "mode",
            "type": "string"
          },
          "required": false
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter suspended status",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapSuspendAdapter"
      },
      "task": true
    },
    {
      "name": "iapUnsuspendAdapter",
      "summary": "Unsuspends the adapter",
      "description": "Unsuspends the adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter suspended status",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapUnsuspendAdapter"
      },
      "task": true
    },
    {
      "name": "iapGetAdapterQueue",
      "summary": "Return the requests that are waiting in the queue if throttling is enabled",
      "description": "Return the requests that are waiting in the queue if throttling is enabled",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter queue",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapGetAdapterQueue"
      },
      "task": true
    },
    {
      "name": "iapTroubleshootAdapter",
      "summary": "Runs troubleshoot script for adapter",
      "description": "Runs troubleshoot script for adapter",
      "input": [
        {
          "name": "props",
          "type": "object",
          "info": "Object containing configuration, healthcheck and auth properties {'connProps':{'host': 'api.service.com', 'base_path': '/', 'protocol': 'http', 'port': 443, 'version': 'v1'},'healthCheckEndpoint': '/healthcheck', 'auth': {'auth_method': 'no authentication', 'username': 'username', 'password': 'password'}}",
          "required": true,
          "schema": {
            "title": "props",
            "type": "object"
          }
        },
        {
          "name": "persistFlag",
          "type": "boolean",
          "info": "Whether the input properties should be saved",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapTroubleshootAdapter"
      },
      "task": true
    },
    {
      "name": "iapRunAdapterHealthcheck",
      "summary": "Runs healthcheck script for adapter",
      "description": "Runs healthcheck script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "boolean",
        "description": "Whether healthcheck passed or failed"
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapRunAdapterHealthcheck"
      },
      "task": true
    },
    {
      "name": "iapRunAdapterConnectivity",
      "summary": "Runs connectivity check script for adapter",
      "description": "Runs connectivity check script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapRunAdapterConnectivity"
      },
      "task": true
    },
    {
      "name": "iapRunAdapterBasicGet",
      "summary": "Runs basicGet script for adapter",
      "description": "Runs basicGet script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapRunAdapterBasicGet"
      },
      "task": true
    },
    {
      "name": "iapMoveAdapterEntitiesToDB",
      "summary": "Moves entities from an adapter into the IAP database",
      "description": "Moves entities from an adapter into the IAP database",
      "input": [],
      "output": {
        "name": "res",
        "type": "object",
        "description": "A JSON Object containing status, code and the response from the mongo transaction",
        "schema": {
          "title": "res",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapMoveAdapterEntitiesToDB"
      },
      "task": true
    },
    {
      "name": "genericAdapterRequest",
      "summary": "Makes the requested generic call",
      "description": "Makes the requested generic call",
      "input": [
        {
          "name": "uriPath",
          "type": "string",
          "info": "the path of the api call - do not include the host, port, base path or version",
          "description": "the path of the api call",
          "schema": {
            "title": "uriPath",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "restMethod",
          "type": "string",
          "info": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "description": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "schema": {
            "title": "restMethod",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "queryData",
          "type": "object",
          "info": "the query parameters to be put on the url (optional)",
          "description": "the query parameters to be put on the url (optional)",
          "schema": {
            "title": "queryData",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "requestBody",
          "type": "object",
          "info": "the payload to be sent with the request (optional)",
          "description": "the payload to be sent with the request (optional)",
          "schema": {
            "title": "requestBody",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "addlHeaders",
          "type": "object",
          "info": "additional headers to be put on the call (optional)",
          "description": "additional headers to be put on the call (optional)",
          "schema": {
            "title": "addlHeaders",
            "type": "object"
          },
          "required": false
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/genericAdapterRequest"
      },
      "task": true
    },
    {
      "name": "genericAdapterRequestNoBasePath",
      "summary": "Makes the requested generic call with no base path or version",
      "description": "Makes the requested generic call with no base path or version",
      "input": [
        {
          "name": "uriPath",
          "type": "string",
          "info": "the path of the api call - do not include the host, port, base path or version",
          "description": "the path of the api call",
          "schema": {
            "title": "uriPath",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "restMethod",
          "type": "string",
          "info": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "description": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "schema": {
            "title": "restMethod",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "queryData",
          "type": "object",
          "info": "the query parameters to be put on the url (optional)",
          "description": "the query parameters to be put on the url (optional)",
          "schema": {
            "title": "queryData",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "requestBody",
          "type": "object",
          "info": "the payload to be sent with the request (optional)",
          "description": "the payload to be sent with the request (optional)",
          "schema": {
            "title": "requestBody",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "addlHeaders",
          "type": "object",
          "info": "additional headers to be put on the call (optional)",
          "description": "additional headers to be put on the call (optional)",
          "schema": {
            "title": "addlHeaders",
            "type": "object"
          },
          "required": false
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/genericAdapterRequestNoBasePath"
      },
      "task": true
    },
    {
      "name": "getDevice",
      "summary": "Get the Appliance",
      "description": "Get the Appliance",
      "input": [
        {
          "name": "deviceName",
          "type": "string",
          "info": "An Appliance Device Name",
          "required": true,
          "schema": {
            "title": "deviceName",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getDevice"
      },
      "task": false
    },
    {
      "name": "getDevicesFiltered",
      "summary": "Get Appliances that match the filter",
      "description": "Get Appliances that match the filter",
      "input": [
        {
          "name": "options",
          "type": "object",
          "info": "options - e.g. { 'start': 1, 'limit': 20, 'filter': { 'name': 'abc123' } }",
          "required": true,
          "schema": {
            "title": "options",
            "type": "object"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "array",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "array"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getDevicesFiltered"
      },
      "task": false
    },
    {
      "name": "isAlive",
      "summary": "Checks the status for the provided Appliance",
      "description": "Checks the status for the provided Appliance",
      "input": [
        {
          "name": "deviceName",
          "type": "string",
          "info": "An Appliance Device Name",
          "required": true,
          "schema": {
            "title": "deviceName",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "boolean",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "boolean"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/isAlive"
      },
      "task": false
    },
    {
      "name": "getConfig",
      "summary": "Gets a config for the provided Appliance",
      "description": "Gets a config for the provided Appliance",
      "input": [
        {
          "name": "deviceName",
          "type": "string",
          "info": "An Appliance Device Name",
          "required": true,
          "schema": {
            "title": "deviceName",
            "type": "string"
          }
        },
        {
          "name": "format",
          "type": "string",
          "info": "The format to be returned - this is ignored as we always return json",
          "required": false,
          "schema": {
            "title": "format",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getConfig"
      },
      "task": false
    },
    {
      "name": "iapGetDeviceCount",
      "summary": "Gets a device count from the system",
      "description": "Gets a device count from the system",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/iapGetDeviceCount"
      },
      "task": false
    },
    {
      "name": "getLocalizations",
      "summary": "",
      "description": "Returns object of localized text",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Returns object of localized text",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getLocalizations"
      },
      "task": true
    },
    {
      "name": "getIncidents",
      "summary": "",
      "description": "Returns an array of Incident objects. Defaults to last 30 days.",
      "input": [
        {
          "name": "startTime",
          "type": "string",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "startTime",
            "type": "string"
          }
        },
        {
          "name": "service",
          "type": "string",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "service",
            "type": "string"
          }
        },
        {
          "name": "instance",
          "type": "string",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "instance",
            "type": "string"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "order",
          "type": "string",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "order",
            "type": "string"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an array of Incident objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getIncidents"
      },
      "task": true
    },
    {
      "name": "getIncidentsid",
      "summary": "",
      "description": "Returns an Incident based on Id.",
      "input": [
        {
          "name": "id",
          "type": "string",
          "info": "Returns an Incident based on Id.",
          "required": true,
          "schema": {
            "title": "id",
            "type": "string"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an Incident based on Id.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getIncidentsid"
      },
      "task": true
    },
    {
      "name": "getIncidentsfields",
      "summary": "",
      "description": "Returns an array of Incident fields.",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an array of Incident fields.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getIncidentsfields"
      },
      "task": true
    },
    {
      "name": "getIncidentsimpactTypes",
      "summary": "",
      "description": "Returns an array of incident imapct type fields.",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an array of incident imapct type fields.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getIncidentsimpactTypes"
      },
      "task": true
    },
    {
      "name": "getIncidentseventTypes",
      "summary": "",
      "description": "Returns an array of incident imapct type fields.",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an array of incident imapct type fields.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getIncidentseventTypes"
      },
      "task": true
    },
    {
      "name": "getMaintenances",
      "summary": "",
      "description": "Returns an array of Maintenance objects. Defaults to last 30 days.",
      "input": [
        {
          "name": "startTime",
          "type": "string",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "startTime",
            "type": "string"
          }
        },
        {
          "name": "service",
          "type": "string",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "service",
            "type": "string"
          }
        },
        {
          "name": "instance",
          "type": "string",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "instance",
            "type": "string"
          }
        },
        {
          "name": "name",
          "type": "string",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "order",
          "type": "string",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "order",
            "type": "string"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an array of Maintenance objects. Defaults to last 30 days.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getMaintenances"
      },
      "task": true
    },
    {
      "name": "getMaintenancesid",
      "summary": "",
      "description": "Returns a Maintenance based on Id.",
      "input": [
        {
          "name": "id",
          "type": "string",
          "info": "Returns a Maintenance based on Id.",
          "required": true,
          "schema": {
            "title": "id",
            "type": "string"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Returns a Maintenance based on Id.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getMaintenancesid"
      },
      "task": true
    },
    {
      "name": "getMaintenancesfields",
      "summary": "",
      "description": "Returns an array of Maintenance fields.",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an array of Maintenance fields.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getMaintenancesfields"
      },
      "task": true
    },
    {
      "name": "getMaintenanceseventTypes",
      "summary": "",
      "description": "Returns an array of maintenance imapct type fields.",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Returns an array of maintenance imapct type fields.",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getMaintenanceseventTypes"
      },
      "task": true
    },
    {
      "name": "getGeneralMessages",
      "summary": "",
      "description": "Returns an array of GeneralMessage objects.",
      "input": [
        {
          "name": "limit",
          "type": "number",
          "info": "Returns an array of GeneralMessage objects.",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Returns an array of GeneralMessage objects.",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGeneralMessages"
      },
      "task": true
    },
    {
      "name": "getGeneralMessagesid",
      "summary": "",
      "description": "Returns a GeneralMessage based on Id.",
      "input": [
        {
          "name": "id",
          "type": "string",
          "info": "Returns a GeneralMessage based on Id.",
          "required": true,
          "schema": {
            "title": "id",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGeneralMessagesid"
      },
      "task": true
    },
    {
      "name": "getMetricValues",
      "summary": "",
      "description": "Returns an array of MetricValue objects.",
      "input": [
        {
          "name": "startTime",
          "type": "string",
          "info": "Returns an array of MetricValue objects.",
          "required": false,
          "schema": {
            "title": "startTime",
            "type": "string"
          }
        },
        {
          "name": "endTime",
          "type": "string",
          "info": "Returns an array of MetricValue objects.",
          "required": false,
          "schema": {
            "title": "endTime",
            "type": "string"
          }
        },
        {
          "name": "metricName",
          "type": "string",
          "info": "Returns an array of MetricValue objects.",
          "required": false,
          "schema": {
            "title": "metricName",
            "type": "string"
          }
        },
        {
          "name": "instanceKey",
          "type": "string",
          "info": "Returns an array of MetricValue objects.",
          "required": false,
          "schema": {
            "title": "instanceKey",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getMetricValues"
      },
      "task": true
    },
    {
      "name": "getMetricValuesid",
      "summary": "",
      "description": "Returns a MetricValue based on Id.",
      "input": [
        {
          "name": "id",
          "type": "string",
          "info": "Returns a MetricValue based on Id.",
          "required": true,
          "schema": {
            "title": "id",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getMetricValuesid"
      },
      "task": true
    },
    {
      "name": "getLocales",
      "summary": "",
      "description": "Return all locales",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getLocales"
      },
      "task": true
    },
    {
      "name": "getServices",
      "summary": "",
      "description": "Return all locales",
      "input": [
        {
          "name": "locale",
          "type": "string",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getServices"
      },
      "task": true
    },
    {
      "name": "getInstances",
      "summary": "",
      "description": "Return all locales",
      "input": [
        {
          "name": "sort",
          "type": "string",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "order",
          "type": "string",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "order",
            "type": "string"
          }
        },
        {
          "name": "products",
          "type": "string",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "products",
            "type": "string"
          }
        },
        {
          "name": "tags",
          "type": "array",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "tags",
            "type": "array"
          }
        },
        {
          "name": "childProducts",
          "type": "boolean",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "childProducts",
            "type": "boolean"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Return all locales",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getInstances"
      },
      "task": true
    },
    {
      "name": "getInstancesstatus",
      "summary": "",
      "description": "DEPRECATED WARNING ROUTE WILL BE REMOVED\nUse /instance/status/preview for overall current status and\ncurrently ongoing incidents, maintenances, and general messages.\nUse /instances/{key}/status for current status and recent\nhistory of incidents, maintenances, and general messages for\nsepcific instance\n\nReturn all instances and associated incidents",
      "input": [
        {
          "name": "products",
          "type": "string",
          "info": "DEPRECATED WARNING ROUTE WILL BE REMOVED\nUse /instance/status/preview for overall current status and\ncurrently ongoing incidents, maintenances, and general messages.\nUse /instances/{key}/status for current status and recent\nhistory of incidents, maintenances, and general messages for\nsepcific instance\n\nReturn all instances and associated incidents",
          "required": false,
          "schema": {
            "title": "products",
            "type": "string"
          }
        },
        {
          "name": "childProducts",
          "type": "boolean",
          "info": "DEPRECATED WARNING ROUTE WILL BE REMOVED\nUse /instance/status/preview for overall current status and\ncurrently ongoing incidents, maintenances, and general messages.\nUse /instances/{key}/status for current status and recent\nhistory of incidents, maintenances, and general messages for\nsepcific instance\n\nReturn all instances and associated incidents",
          "required": false,
          "schema": {
            "title": "childProducts",
            "type": "boolean"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "DEPRECATED WARNING ROUTE WILL BE REMOVED\nUse /instance/status/preview for overall current status and\ncurrently ongoing incidents, maintenances, and general messages.\nUse /instances/{key}/status for current status and recent\nhistory of incidents, maintenances, and general messages for\nsepcific instance\n\nReturn all instances and associated incidents",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getInstancesstatus"
      },
      "task": true
    },
    {
      "name": "getInstancesstatuspreview",
      "summary": "",
      "description": "Return all instances and associated incidents, maintenances, and general messages.\nFor each instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
      "input": [
        {
          "name": "products",
          "type": "string",
          "info": "Return all instances and associated incidents, maintenances, and general messages.\nFor each instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "products",
            "type": "string"
          }
        },
        {
          "name": "childProducts",
          "type": "boolean",
          "info": "Return all instances and associated incidents, maintenances, and general messages.\nFor each instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "childProducts",
            "type": "boolean"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Return all instances and associated incidents, maintenances, and general messages.\nFor each instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getInstancesstatuspreview"
      },
      "task": true
    },
    {
      "name": "getInstanceskeystatuspreview",
      "summary": "",
      "description": "Rerurn an instance with associated incidents, maintenances, and general messages.\nFor a given instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
      "input": [
        {
          "name": "key",
          "type": "string",
          "info": "Rerurn an instance with associated incidents, maintenances, and general messages.\nFor a given instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": true,
          "schema": {
            "title": "key",
            "type": "string"
          }
        },
        {
          "name": "productKey",
          "type": "string",
          "info": "Rerurn an instance with associated incidents, maintenances, and general messages.\nFor a given instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "productKey",
            "type": "string"
          }
        },
        {
          "name": "childProducts",
          "type": "boolean",
          "info": "Rerurn an instance with associated incidents, maintenances, and general messages.\nFor a given instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "childProducts",
            "type": "boolean"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Rerurn an instance with associated incidents, maintenances, and general messages.\nFor a given instance returns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getInstanceskeystatuspreview"
      },
      "task": true
    },
    {
      "name": "getInstanceskeystatus",
      "summary": "",
      "description": "Return an by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
      "input": [
        {
          "name": "key",
          "type": "string",
          "info": "Return an by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": true,
          "schema": {
            "title": "key",
            "type": "string"
          }
        },
        {
          "name": "productKey",
          "type": "string",
          "info": "Return an by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "productKey",
            "type": "string"
          }
        },
        {
          "name": "childProducts",
          "type": "boolean",
          "info": "Return an by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "childProducts",
            "type": "boolean"
          }
        },
        {
          "name": "locale",
          "type": "string",
          "info": "Return an by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": false,
          "schema": {
            "title": "locale",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getInstanceskeystatus"
      },
      "task": true
    },
    {
      "name": "getInstanceAliaseskeystatus",
      "summary": "",
      "description": "Return an by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
      "input": [
        {
          "name": "key",
          "type": "string",
          "info": "Return an by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE",
          "required": true,
          "schema": {
            "title": "key",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getInstanceAliaseskeystatus"
      },
      "task": true
    },
    {
      "name": "getInstanceAliaseskey",
      "summary": "",
      "description": "Get Instance Alias",
      "input": [
        {
          "name": "key",
          "type": "string",
          "info": "Get Instance Alias",
          "required": true,
          "schema": {
            "title": "key",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getInstanceAliaseskey"
      },
      "task": true
    },
    {
      "name": "getProducts",
      "summary": "",
      "description": "Return all catergories",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "GET",
        "path": "/getProducts"
      },
      "task": true
    },
    {
      "name": "getProductskey",
      "summary": "",
      "description": "Returns an product by id.",
      "input": [
        {
          "name": "key",
          "type": "string",
          "info": "Returns an product by id.",
          "required": true,
          "schema": {
            "title": "key",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getProductskey"
      },
      "task": true
    },
    {
      "name": "postSubscribe",
      "summary": "",
      "description": "",
      "input": [
        {
          "name": "XSendNotification",
          "type": "string",
          "info": "",
          "required": false,
          "schema": {
            "title": "XSendNotification",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": "",
          "required": true,
          "schema": {
            "title": "body",
            "type": "object"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postSubscribe"
      },
      "task": true
    },
    {
      "name": "patchUnsubscribe",
      "summary": "",
      "description": "",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "",
          "required": false,
          "schema": {
            "title": "body",
            "type": "object"
          }
        },
        {
          "name": "token",
          "type": "string",
          "info": "",
          "required": false,
          "schema": {
            "title": "token",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchUnsubscribe"
      },
      "task": true
    },
    {
      "name": "postUnsubscribe",
      "summary": "",
      "description": "",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "",
          "required": false,
          "schema": {
            "title": "body",
            "type": "object"
          }
        },
        {
          "name": "token",
          "type": "string",
          "info": "",
          "required": false,
          "schema": {
            "title": "token",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postUnsubscribe"
      },
      "task": true
    },
    {
      "name": "postLogin",
      "summary": "",
      "description": "Requests to send a login link to the email address",
      "input": [
        {
          "name": "XSendNotification",
          "type": "string",
          "info": "Requests to send a login link to the email address",
          "required": false,
          "schema": {
            "title": "XSendNotification",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": "Requests to send a login link to the email address",
          "required": true,
          "schema": {
            "title": "body",
            "type": "object"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postLogin"
      },
      "task": true
    },
    {
      "name": "getLogout",
      "summary": "",
      "description": "Logout authenticated user.",
      "input": [
        {
          "name": "token",
          "type": "string",
          "info": "Logout authenticated user.",
          "required": true,
          "schema": {
            "title": "token",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getLogout"
      },
      "task": true
    },
    {
      "name": "getSubscribers",
      "summary": "Retrieve Subscriber",
      "description": "Returns subscriber and subscription using token",
      "input": [
        {
          "name": "token",
          "type": "string",
          "info": "Returns subscriber and subscription using token",
          "required": true,
          "schema": {
            "title": "token",
            "type": "string"
          }
        },
        {
          "name": "normalize",
          "type": "boolean",
          "info": "Returns subscriber and subscription using token",
          "required": false,
          "schema": {
            "title": "normalize",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getSubscribers"
      },
      "task": true
    },
    {
      "name": "patchSubscribers",
      "summary": "Update Subscriber",
      "description": "Update subscriber using token",
      "input": [
        {
          "name": "XSendNotification",
          "type": "string",
          "info": "Update subscriber using token",
          "required": false,
          "schema": {
            "title": "XSendNotification",
            "type": "string"
          }
        },
        {
          "name": "token",
          "type": "string",
          "info": "Update subscriber using token",
          "required": true,
          "schema": {
            "title": "token",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": "Update subscriber using token",
          "required": true,
          "schema": {
            "title": "body",
            "type": "object"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchSubscribers"
      },
      "task": true
    },
    {
      "name": "postSubscriberssubscriptionsid",
      "summary": "Creates a Subscription for the User.",
      "description": "",
      "input": [
        {
          "name": "id",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "id",
            "type": "string"
          }
        },
        {
          "name": "token",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "token",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": "",
          "required": true,
          "schema": {
            "title": "body",
            "type": "object"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postSubscriberssubscriptionsid"
      },
      "task": true
    },
    {
      "name": "patchSubscriberssubscriptionsid",
      "summary": "Updates a Subscription for the User.",
      "description": "",
      "input": [
        {
          "name": "id",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "id",
            "type": "string"
          }
        },
        {
          "name": "token",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "token",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": "",
          "required": true,
          "schema": {
            "title": "body",
            "type": "object"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchSubscriberssubscriptionsid"
      },
      "task": true
    },
    {
      "name": "deleteSubscriberssubscriptionsid",
      "summary": "Deletes a Subscription for the User.",
      "description": "",
      "input": [
        {
          "name": "id",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "id",
            "type": "string"
          }
        },
        {
          "name": "token",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "token",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": "",
          "required": true,
          "schema": {
            "title": "body",
            "type": "object"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteSubscriberssubscriptionsid"
      },
      "task": true
    },
    {
      "name": "getSearchkey",
      "summary": "",
      "description": "Return all search results",
      "input": [
        {
          "name": "key",
          "type": "string",
          "info": "Return all search results",
          "required": true,
          "schema": {
            "title": "key",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getSearchkey"
      },
      "task": true
    },
    {
      "name": "getTags",
      "summary": "",
      "description": "Return all the tags",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "GET",
        "path": "/getTags"
      },
      "task": true
    },
    {
      "name": "getTagsinstanceinstanceKey",
      "summary": "",
      "description": "Return all the tags for a given Instance Key",
      "input": [
        {
          "name": "instanceKey",
          "type": "string",
          "info": "Return all the tags for a given Instance Key",
          "required": true,
          "schema": {
            "title": "instanceKey",
            "type": "string"
          }
        },
        {
          "name": "instances",
          "type": "boolean",
          "info": "Return all the tags for a given Instance Key",
          "required": false,
          "schema": {
            "title": "instances",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getTagsinstanceinstanceKey"
      },
      "task": true
    },
    {
      "name": "getTagTypes",
      "summary": "",
      "description": "Return all the tag types",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "GET",
        "path": "/getTagTypes"
      },
      "task": true
    }
  ]
}